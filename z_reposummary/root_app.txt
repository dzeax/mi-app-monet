===== C:\Users\Usuario\Documents\GitHub\mi-app-monet\app\globals.css =====
/* Importa Tailwind (v4) */
@import "tailwindcss";

/* Fuente Inter de Google Fonts */
@import url("https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600;700&display=swap");

/* -------------------------------------------------
   THEME TOKENS (Tailwind v4) â€” Default: LIGHT
   ------------------------------------------------- */
@theme {
  /* TipografÃ­a base */
  --font-sans: "Inter", ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
    "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";

  /* Colores semÃ¡nticos principales */
  --color-primary: #00bfa5;   /* verde corporativo */
  --color-accent:  #ff5252;   /* para errores/alertas */

  /* Texto/superficie para utilidades Tailwind existentes (bg-bg, text-text) */
  --color-bg:   #f5f7fb;      /* compat con bg-bg (usado en layout) */
  --color-text: #0f172a;      /* compat con text-text */

  /* Surfaces (light) */
  --color-bg-outer: #f5f7fb;  /* fondo de pÃ¡gina */
  --color-surface:  #ffffff;  /* tarjetas/paneles */
  --color-surface-2:#f2f4f7;  /* inputs/superficie secundaria */
  --color-border:   #e5e7eb;  /* borde sutil */
}

/* Helpers no expuestos en @theme (pueden cambiar con el tema) */
:root {
  --color-muted: rgba(15, 23, 42, 0.65);
  --color-hover: color-mix(in oklab, var(--color-surface) 85%, #0f172a);

  /* Paleta para charts (LIGHT) */
  --chart-1: #06b6d4; /* cyan-500 */
  --chart-2: #6366f1; /* indigo-500 */
  --chart-3: #22c55e; /* green-500 */
  --chart-4: #f59e0b; /* amber-500 */
  --chart-5: #ef4444; /* red-500 */

  --chart-axis: rgba(15, 23, 42, 0.72);
  --chart-grid: rgba(15, 23, 42, 0.08);
  --chart-grid-strong: rgba(15, 23, 42, 0.14);
  --chart-tooltip-bg: color-mix(in oklab, var(--color-surface) 92%, black);
}

/* -------------------------------------------------
   DARK THEME (forzado con data-attr) 
   ------------------------------------------------- */
html[data-theme="dark"] {
  --color-bg:        #1b1d20;
  --color-text:      #ffffff;

  --color-bg-outer:  #1b1d20;
  --color-surface:   #23262b;
  --color-surface-2: #2b2f35;
  --color-border:    #3a3f46;

  --color-muted: rgba(255,255,255,.72);
  --color-hover: rgba(255,255,255,.04);

  /* Charts (DARK) */
  --chart-1: #60a5fa; /* blue-400 */
  --chart-2: #a78bfa; /* violet-400 */
  --chart-3: #34d399; /* emerald-400 */
  --chart-4: #fbbf24; /* amber-400 */
  --chart-5: #f87171; /* red-400 */

  --chart-axis: rgba(255,255,255,.72);
  --chart-grid: rgba(255,255,255,.10);
  --chart-grid-strong: rgba(255,255,255,.16);
  --chart-tooltip-bg: color-mix(in oklab, var(--color-surface) 92%, black);
}

/* Si NO fuerzas tema con data-attr, respeta el sistema */
@media (prefers-color-scheme: dark) {
  html:not([data-theme]) {
    --color-bg:        #1b1d20;
    --color-text:      #ffffff;

    --color-bg-outer:  #1b1d20;
    --color-surface:   #23262b;
    --color-surface-2: #2b2f35;
    --color-border:    #3a3f46;

    --color-muted: rgba(255,255,255,.72);
    --color-hover: rgba(255,255,255,.04);

    --chart-1: #60a5fa;
    --chart-2: #a78bfa;
    --chart-3: #34d399;
    --chart-4: #fbbf24;
    --chart-5: #f87171;

    --chart-axis: rgba(255,255,255,.72);
    --chart-grid: rgba(255,255,255,.10);
    --chart-grid-strong: rgba(255,255,255,.16);
    --chart-tooltip-bg: color-mix(in oklab, var(--color-surface) 92%, black);
  }
}

/* -------------------------------------------------
   Global base
   ------------------------------------------------- */
html,
body {
  font-family: var(--font-sans);
  background: var(--color-bg-outer);
  color: var(--color-text);
  min-height: 100vh;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Texto secundario */
.muted { color: var(--color-muted); }

/* -------------------------------------------------
   UI building blocks (cards, inputs, buttons, tables)
   ------------------------------------------------- */

/* Card */
.card {
  @apply rounded-2xl border shadow-sm;
  background: var(--color-surface);
  border-color: var(--color-border);
  box-shadow: 0 1px 2px rgba(0,0,0,.05);
}

/* Inputs */
.input {
  @apply rounded-lg px-3 py-2 border outline-none;
  background: var(--color-surface-2);
  border-color: var(--color-border);
  color: var(--color-text);
  caret-color: var(--color-text);
}
.input::placeholder { color: color-mix(in oklab, var(--color-text) 55%, transparent); }
.input:focus {
  box-shadow: 0 0 0 3px color-mix(in oklab, var(--color-primary) 22%, transparent);
  border-color: color-mix(in oklab, var(--color-primary) 60%, var(--color-border));
}

/* BotÃ³n primario */
.btn-primary {
  @apply inline-flex items-center justify-center rounded-lg px-4 py-2 font-semibold transition-all;
  color: white;
  background: linear-gradient(180deg, #34d399 0%, #10b981 100%); /* Emerald */
  box-shadow: 0 6px 18px rgba(16,185,129,.22);
}
.btn-primary:hover { filter: brightness(1.05); }
.btn-primary:active { transform: translateY(0.5px); }

/* BotÃ³n ghost */
.btn-ghost {
  @apply inline-flex items-center justify-center rounded-lg px-4 py-2 font-medium transition-colors border;
  border-color: var(--color-border);
  color: color-mix(in oklab, var(--color-text) 85%, transparent);
  background: transparent;
}
.btn-ghost:hover { background: var(--color-hover); }

/* Tabla */
/* Solo scroll horizontal; vertical visible para que sticky use el viewport */
.table-wrap {
  overflow-x: auto;
  overflow-y: visible;

  border-radius: 1rem;
  border: 1px solid var(--color-border);
  background: var(--color-surface);
  box-shadow: 0 1px 6px rgba(0,0,0,.06);

  /* la tabla por encima de la lÃ¡mina */
  position: relative;
  z-index: 30;
}

/* ðŸ‘‡ cambia a separate para evitar glitches con sticky */
.table {
  width: 100%;
  border-collapse: separate;
  border-spacing: 0;
}

/* Cabeceras sticky: un Ãºnico sitio de verdad (sin otro bloque mÃ¡s abajo) */
.table thead th {
  position: sticky;
  /* usa el offset calculado; fallback al header fijo si no se define */
  top: var(--table-sticky-offset, var(--content-sticky-top, 0px));
  z-index: 45;

  background: var(--color-surface-2);
  color: color-mix(in oklab, var(--color-text) 80%, transparent);
  box-shadow: 0 1px 0 0 var(--color-border), 0 6px 16px rgba(0,0,0,.04);
  border-bottom: 1px solid var(--color-border);
}

.table tbody tr { border-bottom: 1px solid var(--color-border); }
.table tbody tr:nth-child(odd)  { background: var(--color-surface); }
.table tbody tr:nth-child(even) { background: var(--color-surface-2); }
.table tbody tr:hover { background: var(--color-hover); transition: background-color .15s ease; }
.table td { @apply text-sm py-3 px-3 align-middle; }

/* Fila SUMMARY */
.row-summary {
  background: linear-gradient(90deg, color-mix(in oklab, var(--color-primary) 18%, transparent), transparent);
  font-weight: 600;
}
.row-summary:hover {
  background: linear-gradient(90deg, color-mix(in oklab, var(--color-primary) 28%, transparent), transparent);
}

/* Ãšltima columna (acciones): compacta, pero sin forzar nowrap al popover */
.table td:last-child,
.table th:last-child { width: 1%; }
.table td:last-child [role="menu"],
.table td:last-child [data-menu],
.table td:last-child .menu,
.table td:last-child .dropdown,
.table td:last-child .popover,
.table td:last-child .actions-menu {
  white-space: normal !important;
  display: flex;
  flex-direction: column;
}

/* Altura de la fila de cabeceras */
:root {
  --th-py: 0.625rem; /* 10px â€” sÃºbelo/bÃ¡jalo a gusto (0.5rem, 0.75rem...) */
  --th-px: 0.75rem;  /* 12px horizontal */
}

.table thead th {
  padding: var(--th-py) var(--th-px);
  font-size: 13px;            /* opcional: un pelÃ­n mÃ¡s legible */
  line-height: 1.2;           /* opcional */
}

/* Inputs de fecha: respeta tema */
input[type="date"] { color-scheme: light; }
html[data-theme="dark"] input[type="date"],
html:not([data-theme]) input[type="date"]:where(:not(:root)) {
  color-scheme: dark;
}

/* Aclarar el icono del calendario (WebKit) */
input[type="date"]:hover::-webkit-calendar-picker-indicator { opacity: 1; }

/* Flash suave cuando se actualiza una fila */
.row-flash {
  animation: rowFlash 1200ms ease-out;
  background-color: color-mix(in oklab, var(--color-primary) 18%, transparent) !important;
}
@keyframes rowFlash {
  0%   { background-color: color-mix(in oklab, var(--color-primary) 28%, transparent); }
  100% { background-color: transparent; }
}

/* --- Inline errors --- */
.input-error {
  border-color: var(--color-accent) !important;
  box-shadow: 0 0 0 2px color-mix(in oklab, var(--color-accent) 18%, transparent);
}
.input-error:focus {
  outline: none;
  box-shadow: 0 0 0 3px color-mix(in oklab, var(--color-accent) 26%, transparent);
}

/* Tooltip base */
.tooltip-panel {
  background: var(--chart-tooltip-bg);
  border: 1px solid var(--color-border);
  border-radius: 0.5rem;
  padding: 0.375rem 0.5rem;
  font-size: 12px;
  max-width: 280px;
  box-shadow: 0 8px 28px rgba(0,0,0,.18);
  z-index: 60;
}

/* -------------------------------------------------
   BONUS: focus ring accesible + scrollbars suaves
   ------------------------------------------------- */
:focus-visible {
  outline: 2px solid color-mix(in oklab, var(--color-primary) 55%, transparent);
  outline-offset: 2px;
  border-radius: 6px;
}

/* Scrollbars (Chromium + Firefox) */
* {
  scrollbar-color: color-mix(in oklab, var(--color-text) 20%, transparent)
                   color-mix(in oklab, var(--color-surface-2) 100%, transparent);
  scrollbar-width: thin;
}
*::-webkit-scrollbar { height: 10px; width: 10px; }
*::-webkit-scrollbar-track { background: var(--color-surface-2); }
*::-webkit-scrollbar-thumb {
  background: color-mix(in oklab, var(--color-text) 22%, transparent);
  border-radius: 9999px;
  border: 2px solid var(--color-surface-2);
}
*::-webkit-scrollbar-thumb:hover {
  background: color-mix(in oklab, var(--color-text) 35%, transparent);
}
/* --- (2) Sombra en header sticky de la tabla --- */
.table thead th {
  position: sticky; top: 0; z-index: 10;
  background: var(--color-surface-2);
  color: color-mix(in oklab, var(--color-text) 80%, transparent);
  /* ya tenÃ­as border-bottom; aÃ±adimos sombra suave */
  box-shadow: 0 1px 0 0 var(--color-border), 0 6px 16px rgba(0,0,0,.04);
}

/* Ãšltima columna (acciones): compacta, pero sin forzar nowrap al popover */
.table td:last-child,
.table th:last-child {
  width: 1%;
  /* quitamos white-space: nowrap; */
}

/* Salvaguardas: el menÃº interno debe poder apilar sus items */
.table td:last-child [role="menu"],
.table td:last-child [data-menu],
.table td:last-child .menu,
.table td:last-child .dropdown,
.table td:last-child .popover,
.table td:last-child .actions-menu {
  white-space: normal !important;
  display: flex;
  flex-direction: column;
}

/* --- (4) Refuerzo visual para badges del SUMMARY --- */
.row-summary .badge-positive,
.row-summary .badge-negative,
.row-summary .badge-warn {
  display: inline-flex;
  align-items: center;
  gap: 4px;
  padding: 2px 6px;
  border-radius: 9999px;
  font-weight: 700;            /* bold para legibilidad */
  line-height: 1.1;
  border: 1px solid transparent;
}

.row-summary .badge-positive {
  color: var(--color-primary);
  background: color-mix(in oklab, var(--color-primary) 28%, transparent) !important;
  border-color: color-mix(in oklab, var(--color-primary) 55%, transparent);
}

.row-summary .badge-negative {
  color: var(--color-accent);
  background: color-mix(in oklab, var(--color-accent) 26%, transparent) !important;
  border-color: color-mix(in oklab, var(--color-accent) 55%, transparent);
}

.row-summary .badge-warn {
  color: color-mix(in oklab, var(--color-accent) 58%, var(--color-primary) 42%);
  background: color-mix(in oklab, var(--color-accent) 22%, var(--color-primary) 22%) !important;
  border-color: color-mix(in oklab, var(--color-accent) 45%, var(--color-primary) 20%);
}

/* =======================
   Brand Bar (Header) â€” fixed size
   ======================= */
.app-header {
  position: sticky;
  top: 0;
  z-index: 100; /* Header siempre por encima de todo */

  /* Fondo oscuro para destacar el logo */
  background: linear-gradient(180deg, #0e1116 0%, #151a22 100%);
  color: #e5e7eb;
  border-bottom: 1px solid color-mix(in oklab, white 12%, transparent);

  /* TamaÃ±o fijo (unificado) */
  --header-h: 5.5rem; /* 88px */
  --logo-h: 56px;     /* altura visual del logo */
}

/* (Opcional) Si prefieres mantener mobile mÃ¡s alto, comenta el bloque superior
   y usa este media-query. Si lo dejas, recuerda ajustar --content-sticky-top en mÃ³vil.
@media (min-width: 768px) {
  .app-header { --header-h: 5.5rem; --logo-h: 56px; }
}
*/

.app-header::after {
  content: "";
  position: absolute; left: 0; right: 0; bottom: -1px;
  height: 2px;
  background: linear-gradient(
    90deg,
    var(--color-primary) 0%,
    color-mix(in oklab, var(--color-primary), transparent 40%) 50%,
    var(--color-accent) 100%
  );
  opacity: .9;
}

.app-header .bar {
  height: var(--header-h);
  /* Sin animaciones del shrink */
  transition: none;
}

/* BotÃ³n ghost en header oscuro */
.app-header .btn-ghost {
  color: #e5e7eb;
  border-color: transparent;
  background: transparent;
}
.app-header .btn-ghost:hover { background: rgba(255,255,255,.06); }

/* Glow sutil del logo */
.app-header .brand-logo {
  filter: drop-shadow(0 0 10px rgba(255,255,255,.08));
  transition: none; /* sin transiciÃ³n ligada a scroll */
}

/* Respeta reduced motion */
@media (prefers-reduced-motion: reduce) {
  .app-header .brand-logo { transition: none; }
}

/* Espaciado vertical consistente para el mÃ³dulo de filtros */
:root {
  --filters-row-gap: .75rem;        /* mobile */
}
@media (min-width: 768px) {
  :root { --filters-row-gap: 1rem; } /* desktop */
}
.filters-stack {
  display: grid;
  grid-auto-rows: min-content;
  row-gap: var(--filters-row-gap);
}

/* === SUBCARDS (sub-superficie para fieldsets) === */
.subcard {
  border: 1px solid color-mix(in oklab, var(--color-text) 8%, var(--color-border));
  background: color-mix(in oklab, var(--color-surface-2) 92%, var(--color-surface));
  border-radius: 0.75rem; /* ~rounded-xl */
  box-shadow: 0 1px 6px rgba(0,0,0,.04);
}

/* Uniformar altura mÃ­nima de los inputs (compacto) */
.input { min-height: 2.5rem; /* 40px */ }

/* Divider mÃ¡s suave y reutilizable */
.divider-soft { height: 1px; background: color-mix(in oklab, var(--color-border), transparent 20%); }

/* Badges de campo (AUTO / CALC) mÃ¡s visibles pero sutiles */
.badge-field {
  display: inline-flex; align-items: center; gap: .25rem;
  padding: 2px 6px; border-radius: .5rem; font-size: 10px; line-height: 1; letter-spacing: .02em;
  border: 1px solid color-mix(in oklab, var(--color-primary) 30%, var(--color-border));
  color: color-mix(in oklab, var(--color-primary) 70%, var(--color-text));
  background: color-mix(in oklab, var(--color-primary) 10%, var(--color-surface-2));
}

/* Variante para CALC si quieres un matiz neutro-gris (opcional) */
.badge-field[data-variant="calc"]{
  border-color: color-mix(in oklab, var(--color-text) 18%, var(--color-border));
  color: color-mix(in oklab, var(--color-text) 80%, transparent);
  background: color-mix(in oklab, var(--color-surface-2) 96%, var(--color-surface));
}

/* Lista del Combobox mÃ¡s clara y con sombra algo mayor */
.cb-panel {
  background: var(--color-surface);
  border: 1px solid var(--color-border);
  box-shadow: 0 12px 28px rgba(0,0,0,.12);
  border-radius: .5rem;
}

/* Hover dentro del panel del combobox */
.cb-item:hover, .cb-item:focus {
  background: color-mix(in oklab, var(--color-surface-2) 80%, transparent);
}

/* Hover de inputs: 2â€“3% mÃ¡s claro */
.input:hover {
  background: color-mix(in oklab, var(--color-surface-2) 92%, white);
}
/* --- Modal chrome (header/footer) --- */
:root{
  /* Toma tokens del header si existen; fallback = mismo gradiente del header */
  --modal-chrome-bg: var(--app-header-bg, linear-gradient(180deg, #0e1116 0%, #151a22 100%));
  --modal-chrome-fg: var(--app-header-fg, #e5e7eb);
  --modal-chrome-border: #ffffff1a;   /* borde sutil */
  --modal-chrome-hover: #ffffff14;    /* hover suave */
}

.modal-chrome{
  background: var(--modal-chrome-bg);
  color: var(--modal-chrome-fg);
  border-color: var(--modal-chrome-border);
  backdrop-filter: blur(4px);
}

/* separadores sutiles + respeta el radio de la card */
.modal-header{
  box-shadow: inset 0 -1px 0 rgba(255,255,255,.05);
  border-top-left-radius: 1rem;
  border-top-right-radius: 1rem;
}
.modal-footer{
  box-shadow: inset 0  1px 0 rgba(255,255,255,.05);
  border-bottom-left-radius: 1rem;
  border-bottom-right-radius: 1rem;
}

/* botones dentro del chrome */
.modal-chrome .btn-ghost{
  color: var(--modal-chrome-fg);
  border-color: transparent;
}
.modal-chrome .btn-ghost:hover{ background: var(--modal-chrome-hover); }
.modal-chrome .btn-primary{ box-shadow: 0 10px 24px rgba(16,185,129,.25); }

/* opcional: fina â€œcintaâ€ de acento arriba del header */
.modal-chrome .accent-strip{
  position: absolute; inset: 0 auto auto 0; height: 3px; width: 100%;
  background-image: linear-gradient(90deg,
    color-mix(in srgb, var(--color-primary), transparent 40%),
    color-mix(in srgb, var(--color-accent),  transparent 40%)
  );
  opacity: .9;
}
@supports not (color-mix(in srgb, red, blue)){
  .modal-chrome .accent-strip{
    background-image: linear-gradient(90deg, var(--color-primary), var(--color-accent));
    opacity: .6;
  }
}

/* --- Edge fades en el Ã¡rea scroll del modal --- */
/* (coloca <div class="edge-fade edge-top" /> y <div class="edge-fade edge-bottom" /> dentro del contenedor scroll) */
.edge-fade{
  position: sticky;
  pointer-events: none;
  z-index: 5;
  height: 14px;
  /* el body del modal tiene padding horizontal px-5 (1.25rem) */
  margin-left: -1.25rem;
  margin-right: -1.25rem;
}
.edge-top{
  top: 0;
  margin-top: -14px;
  background: linear-gradient(to bottom,
    color-mix(in oklab, var(--color-text) 20%, transparent),
    transparent
  );
}
.edge-bottom{
  bottom: 0;
  margin-bottom: -14px;
  background: linear-gradient(to top,
    color-mix(in oklab, var(--color-text) 20%, transparent),
    transparent
  );
}

/* --- Segmented / Pill Tabs (accesibles con role="tab") --- */
.segmented {
  display: inline-flex;
  gap: .25rem;
  padding: .25rem;
  border: 1px solid var(--color-border);
  border-radius: 9999px;
  background: color-mix(in oklab, var(--color-surface-2) 92%, var(--color-surface));
  box-shadow: 0 1px 6px rgba(0,0,0,.05);
}
.segmented [role="tab"] {
  padding: .5rem .875rem;
  border-radius: 9999px;
  font-size: .875rem;
  color: color-mix(in oklab, var(--color-text) 80%, transparent);
  transition: background-color .15s ease, color .15s ease, box-shadow .15s ease;
}
.segmented [role="tab"]:hover {
  background: color-mix(in oklab, var(--color-surface) 88%, transparent);
}
.segmented [role="tab"][aria-selected="true"] {
  background: var(--color-surface);
  color: var(--color-text);
  box-shadow: 0 2px 10px rgba(0,0,0,.08);
}

/* --- Tiles de estadÃ­stica (coherentes con KPIBar) --- */
.stat-tile {
  border: 1px solid color-mix(in oklab, var(--color-text) 8%, var(--color-border));
  background: color-mix(in oklab, var(--color-surface-2) 92%, var(--color-surface));
  border-radius: .75rem; /* ~rounded-xl */
  box-shadow: 0 1px 6px rgba(0,0,0,.04);
}

/* --- Tabla editable del Manage (sub-superficie + header sticky) --- */
.manage-table {
  border: 1px solid var(--color-border);
  border-radius: .75rem;
  background: var(--color-surface);
  box-shadow: 0 1px 6px rgba(0,0,0,.06);
  overflow: hidden;
}
.manage-table thead th {
  position: sticky; top: 0; z-index: 1;
  background: var(--color-surface-2);
  color: color-mix(in oklab, var(--color-text) 80%, transparent);
  box-shadow: 0 1px 0 0 var(--color-border), 0 6px 16px rgba(0,0,0,.04);
  border-bottom: 1px solid var(--color-border);
}
/* filas (grid) bajo la cabecera */
.manage-rows > div:hover {
  background: color-mix(in oklab, var(--color-surface-2) 85%, var(--color-surface));
  transition: background-color .12s ease;
}

:root { --footer-h: 40px; } /* altura compacta */

.app-footer{
  position: fixed;
  left: 0; right: 0; bottom: 0;
  height: var(--footer-h);
  z-index: 80;                 /* por debajo de modales (100+) */
  display: flex; align-items: center;
  border-top: 1px solid var(--modal-chrome-border);
  /* la clase .modal-chrome ya aporta fondo/colores coherentes */
  padding-bottom: max(0px, env(safe-area-inset-bottom));
}

/* contenedor interno centrado */
.app-footer .inner{
  width: 100%;
  max-width: 1200px;           /* ajÃºstalo a tu ancho preferido */
  margin: 0 auto;
  padding: 0 .75rem;
  display: flex; align-items: center; justify-content: space-between;
  gap: .75rem;
  font-size: 12px;
}

/* detalles de icono */
.app-footer .heart{
  display: inline-block;
  vertical-align: -2px;
  transition: transform .2s ease;
}
.app-footer .heart:hover{ transform: scale(1.05); }

/* utilidad: aÃ±ade espacio inferior al contenido para no taparlo */
.with-app-footer{
  padding-bottom: calc(var(--footer-h) + max(0px, env(safe-area-inset-bottom)));
}

===== C:\Users\Usuario\Documents\GitHub\mi-app-monet\app\layout.tsx =====
// app/layout.tsx
import type { Metadata } from 'next';
import './globals.css';
import '@/styles/tw.input.css';
import AppProviders from './providers';
import AppHeader from '@/components/AppHeader';
import FooterBar from '@/components/ui/FooterBar';

export const metadata: Metadata = {
  title: 'Monet Email Dashboard',
  description: 'Campaign reporting',
};

export default function RootLayout({ children }: { children: React.ReactNode }) {
  return (
    <html lang="en">
      <body
        className="min-h-dvh font-sans antialiased bg-[color:var(--color-bg)] text-[color:var(--color-text)]"
        // Hace que los elementos sticky (tablas/filtros) respeten la altura fija del header
        style={{ ['--content-sticky-top' as any]: '5.5rem' }}
        suppressHydrationWarning
      >
        <AppProviders>
          <div className="with-app-footer">
            <AppHeader />
            {children}
          </div>

          {/* Barra fija inferior */}
          <FooterBar />
        </AppProviders>
      </body>
    </html>
  );
}

===== C:\Users\Usuario\Documents\GitHub\mi-app-monet\app\page.tsx =====
'use client';

import { useState } from 'react';
import CampaignTable from '@/components/CampaignTable';
import Sidebar from '@/components/Sidebar';

export default function Page() {
  const [collapsed, setCollapsed] = useState(false);
  const [mobileOpen, setMobileOpen] = useState(false);

  return (
    <main
      data-page="email-campaigns"
      className="mx-auto w-full max-w-none px-3 md:px-4 lg:px-6 py-6"
    >
      {/* BotÃ³n flotante para abrir acciones en mÃ³vil */}
      <button
        onClick={() => setMobileOpen(true)}
        className="fixed bottom-5 left-5 z-40 md:hidden rounded-full border border-[--color-border] bg-[color:var(--color-surface)] px-4 py-2 shadow-lg"
        aria-label="Open actions"
        aria-controls="mobile-actions-drawer"
        aria-expanded={mobileOpen}
      >
        â˜° Actions
      </button>

      {/* Grid principal */}
      <div
        className={[
          'grid grid-cols-1 gap-4 md:gap-5 items-start content-start',
          collapsed
            ? 'md:grid-cols-[64px_1fr]'
            : 'md:grid-cols-[200px_1fr] lg:grid-cols-[220px_1fr]',
        ].join(' ')}
      >
        {/* Sidebar (sticky en desktop) */}
        <aside
          className="self-start md:sticky h-fit w-full"
          // MantÃ©n el sidebar pegado pero respetando el header fijo + 1rem de respiro
          style={{ top: 'calc(var(--content-sticky-top) + 1rem)' }}
        >
          {/* Desktop / tablet */}
          <div className="hidden md:block">
            <Sidebar
              collapsed={collapsed}
              onToggleCollapse={() => setCollapsed(v => !v)}
            />
          </div>

          {/* Mobile drawer */}
          {mobileOpen && (
            <div
              id="mobile-actions-drawer"
              className="fixed inset-0 z-50 md:hidden"
              role="dialog"
              aria-modal="true"
              onMouseDown={(e) => {
                if (e.target === e.currentTarget) setMobileOpen(false);
              }}
            >
              <div className="absolute inset-0 bg-black/60 backdrop-blur-sm" />
              <div className="absolute left-0 top-0 h-full w-[85%] max-w-[320px] p-3">
                <div className="card h-full p-4 overflow-y-auto">
                  <div className="flex items-center justify-between mb-2">
                    <h2 className="text-lg font-semibold">Actions</h2>
                    <button
                      className="btn-ghost"
                      onClick={() => setMobileOpen(false)}
                      aria-label="Close"
                    >
                      âœ•
                    </button>
                  </div>
                  <Sidebar
                    collapsed={false}
                    onToggleCollapse={() => {}}
                    hideCollapseToggle
                    onActionDone={() => setMobileOpen(false)}
                  />
                </div>
              </div>
            </div>
          )}
        </aside>

        {/* Contenido principal */}
        <section className="min-w-0">
          <CampaignTable />
        </section>
      </div>
    </main>
  );
}

===== C:\Users\Usuario\Documents\GitHub\mi-app-monet\app\providers.tsx =====
'use client';

import React from 'react';
import { AuthProvider } from '@/context/AuthContext';
import { CatalogOverridesProvider } from '@/context/CatalogOverridesContext';
import { CampaignDataProvider } from '@/context/CampaignDataContext';

// Si tienes mÃ¡s providers (ThemeProvider, Toaster, etc.), mantenlos,
// pero asegÃºrate de que AuthProvider sea el mÃ¡s exterior.

export default function AppProviders({ children }: { children: React.ReactNode }) {
  return (
    <AuthProvider>
      <CatalogOverridesProvider>
        <CampaignDataProvider>
          {children}
        </CampaignDataProvider>
      </CatalogOverridesProvider>
    </AuthProvider>
  );
}

===== C:\Users\Usuario\Documents\GitHub\mi-app-monet\app\(auth)\layout.tsx =====
export default function AuthLayout({ children }: { children: React.ReactNode }) {
  // Layout simple y limpio para los formularios
  return (
    <div className="min-h-screen grid place-items-center bg-neutral-50">
      <div className="w-full max-w-md bg-white rounded-xl shadow p-6">
        {children}
      </div>
    </div>
  );
}

===== C:\Users\Usuario\Documents\GitHub\mi-app-monet\app\(auth)\login\page.tsx =====
'use client';

import { useState, useEffect } from 'react';
import { useRouter, useSearchParams } from 'next/navigation';
import { createClientComponentClient } from '@supabase/auth-helpers-nextjs';

export default function LoginPage() {
  const router = useRouter();
  const sp = useSearchParams();
  const redirect = sp.get('redirect') ?? '/';

  // âœ… Cliente de Supabase en cliente (seguro en componentes)
  const supabase = createClientComponentClient();

  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [loading, setLoading] = useState(false);
  const [err, setErr] = useState<string | null>(null);

  // Si ya hay sesiÃ³n, redirige (evita parpadeo si viene autenticado)
  useEffect(() => {
    let cancelled = false;

    supabase.auth.getSession().then(({ data }) => {
      if (!cancelled && data.session) router.replace(redirect);
    });

    return () => {
      cancelled = true;
    };
  }, [router, redirect, supabase]);

  const onSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setErr(null);
    setLoading(true);

    const { error } = await supabase.auth.signInWithPassword({ email, password });

    setLoading(false);

    if (error) {
      setErr(error.message);
      return;
    }
    router.replace(redirect);
  };

  return (
    <form onSubmit={onSubmit} className="space-y-4">
      <h1 className="text-xl font-semibold">Entrar</h1>

      <label className="block">
        <span className="text-sm">Email</span>
        <input
          type="email"
          required
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          className="mt-1 w-full rounded-md border px-3 py-2"
          placeholder="tu@correo.com"
        />
      </label>

      <label className="block">
        <span className="text-sm">ContraseÃ±a</span>
        <input
          type="password"
          required
          minLength={6}
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          className="mt-1 w-full rounded-md border px-3 py-2"
          placeholder="â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢"
        />
      </label>

      {err && <p className="text-red-600 text-sm">{err}</p>}

      <button
        type="submit"
        disabled={loading}
        className="w-full rounded-md bg-black text-white py-2 disabled:opacity-50"
      >
        {loading ? 'Entrandoâ€¦' : 'Entrar'}
      </button>

      <p className="text-sm text-center text-neutral-500">
        Â¿No tienes cuenta?{' '}
        <a href="/register" className="underline">Crear cuenta</a>
      </p>
    </form>
  );
}

===== C:\Users\Usuario\Documents\GitHub\mi-app-monet\app\(auth)\register\page.tsx =====
'use client';

import { useState, useEffect } from 'react';
import { useRouter, useSearchParams } from 'next/navigation';
import { supabase } from '@/lib/supabase/client';

export default function RegisterPage() {
  const router = useRouter();
  const sp = useSearchParams();
  const redirect = sp.get('redirect') || '/';

  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const [loading, setLoading] = useState(false);
  const [info, setInfo] = useState<string | null>(null);
  const [err, setErr] = useState<string | null>(null);

  // Si ya hay sesiÃ³n, redirige
  useEffect(() => {
    supabase.auth.getSession().then(({ data }) => {
      if (data.session) router.replace(redirect);
    });
  }, [router, redirect]);

  const onSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setErr(null);
    setInfo(null);
    setLoading(true);

    const { error } = await supabase.auth.signUp({
      email,
      password,
    });

    setLoading(false);

    if (error) {
      setErr(error.message);
      return;
    }

    // Si en Supabase tienes "Confirm email" activo, verÃ¡s este aviso:
    setInfo('Revisa tu email para confirmar la cuenta. Luego podrÃ¡s iniciar sesiÃ³n.');
    // Si lo tienes desactivado en dev, puedes redirigir directo:
    // router.replace('/login?registered=1');
  };

  return (
    <form onSubmit={onSubmit} className="space-y-4">
      <h1 className="text-xl font-semibold">Crear cuenta</h1>

      <label className="block">
        <span className="text-sm">Email</span>
        <input
          type="email"
          required
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          className="mt-1 w-full rounded-md border px-3 py-2"
          placeholder="tu@correo.com"
        />
      </label>

      <label className="block">
        <span className="text-sm">ContraseÃ±a</span>
        <input
          type="password"
          required
          minLength={6}
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          className="mt-1 w-full rounded-md border px-3 py-2"
          placeholder="MÃ­nimo 6 caracteres"
        />
      </label>

      {err && <p className="text-red-600 text-sm">{err}</p>}
      {info && <p className="text-green-700 text-sm">{info}</p>}

      <button
        type="submit"
        disabled={loading}
        className="w-full rounded-md bg-black text-white py-2 disabled:opacity-50"
      >
        {loading ? 'Creandoâ€¦' : 'Crear cuenta'}
      </button>

      <p className="text-sm text-center text-neutral-500">
        Â¿Ya tienes cuenta?{' '}
        <a href="/login" className="underline">Entrar</a>
      </p>
    </form>
  );
}

===== C:\Users\Usuario\Documents\GitHub\mi-app-monet\app\(protected)\layout.tsx =====
import { redirect } from 'next/navigation';
import { AuthProvider } from '@/context/AuthContext';
import { getSessionAndAppUser } from '@/lib/auth/server';

export default async function ProtectedLayout({ children }: { children: React.ReactNode }) {
  const { session, appUser } = await getSessionAndAppUser();

  // Si no hay sesiÃ³n -> a login (con redirect bÃ¡sico a "/")
  if (!session) {
    redirect('/login?redirect=%2F');
  }

  // Opcional: bloquear usuarios inactivos
  if (appUser && appUser.is_active === false) {
    redirect('/login?reason=inactive');
  }

  // Envuelve el Ã¡rea privada con el AuthProvider (si no lo haces ya en app/layout.tsx)
  return (
    <AuthProvider>
      {children}
    </AuthProvider>
  );
}

===== C:\Users\Usuario\Documents\GitHub\mi-app-monet\app\reports\page.tsx =====
'use client';

import ReportsView from '@/components/reports/ReportsView';

export default function ReportsPage() {
  return (
    <main
      data-page="reports"
      className="mx-auto w-full max-w-none px-3 md:px-4 lg:px-6 py-6"
    >
      <ReportsView />
    </main>
  );
}

